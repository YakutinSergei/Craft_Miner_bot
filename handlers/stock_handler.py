from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from bot_menu.menu import create_inline_kb
from data_bases.orm_basic import get_user_stock, up_stock_user
from lexicon.lexicon_ru import LEXICON_MENU

router: Router = Router()


'''–î–µ–π—Å—Ç–≤–∏–µ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –°–ö–õ–ê–î'''
@router.message((F.text == LEXICON_MENU['warehouse']))
async def stock_btn(message: Message):
    #–ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —à–∞—Ö—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    stock_user = await get_user_stock(message.from_user.id)
    text = ''
    sum_stock = 0
    #–§–æ—Ä–º—É—Ä–∏–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞
    for i in range(len(stock_user)):
        text += f"{stock_user[i]['name']} - {round(stock_user[i]['stock'])}\n"
        sum_stock += round(stock_user[i]['stock'])
    #–í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(text=f"<b><i><u>üì¶–°–ö–õ–ê–îüì¶</u></i></b>\n\n"
                              f"{text}\n"
                              f"–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å —Å–∫–ª–∞–¥–∞: {round(sum_stock/stock_user[0]['volume_stock']*100)} %",
                         reply_markup=await create_inline_kb(1, 'stock_up_', LEXICON_MENU['stock_up']))

'''–£–ª—É—á—à–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞'''
@router.callback_query(F.data.startswith('stock_up_'))
async def process_stock_up_user(callback: CallbackQuery):
    #—É–ª—É—á—à–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞
    check_stock = await up_stock_user(callback.from_user.id)
    #–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–∏–ª–æ—Å—å –ª–∏ —É–ª—É—á—à–∏—Ç—å
    if check_stock:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —à–∞—Ö—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stock_user = await get_user_stock(callback.from_user.id)
        text = ''
        sum_stock = 0
        # –§–æ—Ä–º—É—Ä–∏–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞
        for i in range(len(stock_user)):
            text += f"{stock_user[i]['name']} - {round(stock_user[i]['stock'])}\n"
            sum_stock += round(stock_user[i]['stock'])
        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.edit_text(text=f"<b><i><u>üì¶–°–ö–õ–ê–îüì¶</u></i></b>\n\n"
                                  f"{text}\n"
                                  f"–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å —Å–∫–ª–∞–¥–∞: {round(sum_stock / stock_user[0]['volume_stock'] * 100)} %",
                             reply_markup=await create_inline_kb(1, 'stock_up_', LEXICON_MENU['stock_up']))
        await callback.answer(text='‚úÖ–°–∫–ª–∞–¥ —É–ª—É—á—à–µ–Ω', show_alert=True)
        
    else:
        await callback.answer(text='‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert=True)


